name: Build project and push to ECR to begin deployment

on:
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Configure AWS credentials using OidcProvider
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Get Image Bucket name from CloudFormation
        id: get-bucket
        run: |
          BUCKET=$(aws cloudformation describe-stacks \
            --stack-name ${{ secrets.CFN_STACK_NAME }} \
            --query "Stacks[0].Outputs[?OutputKey=='ArtifactBucket'].OutputValue" \
            --output text)
          echo "bucket=$BUCKET" >> $GITHUB_OUTPUT


      - name: zip appspec.yml and taskdef.json and push to s3
        run: |
          zip deployment-files.zip appspec.yml taskdef.json
          
          aws s3 cp deployment-files.zip s3://${{ steps.get-bucket.outputs.bucket }}/deployment-files.zip
          
#          aws s3 cp deployment-files.zip s3://${{ secrets.S3_BUCKET_NAME }}/deployment-files.zip

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run:  |
          echo "ECR_REGISTRY=$ECR_REGISTRY"
          echo "ECR_REPOSITORY=$ECR_REPOSITORY"
          echo "Building image"
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
